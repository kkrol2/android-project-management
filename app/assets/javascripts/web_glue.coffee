class @WebGlue
  constructor: (@useCase, @gui, @storage)->
    AutoBind(@gui, @useCase)
    Before(@useCase, 'fetchProjectDummy', (id) => @storage.fetchProject(id))
    Before(@useCase, 'fetchProjectDummy', (id) => @storage.fetchImages(id))
    Before(@useCase, 'fetchProjectDummy', (id) => @storage.fetchComments(id))
    Before(@useCase, 'fetchProjectDummy', (id) => @storage.fetchSurveys(id))
    Before(@useCase, 'fetchProjectDummy', (id) => @storage.fetchIssues(id))
    After(@storage, 'setProject', (data) => @useCase.setProject(data))
    After(@storage, 'setComments', (data) => @useCase.setComments(data))
    After(@storage, 'setImages', (data) => @useCase.setImages(data))
    After(@storage, 'setSurveys', (data) => @useCase.setSurveys(data))
    After(@storage, 'setIssues', (data) => @useCase.setIssues(data))
    After(@useCase, 'setSurveys', (data) => @storage.surveysVoted(@useCase.getSurveys()))
    After(@gui, 'showHome', => @gui.showContent(@useCase.getProject()))
    After(@gui, 'showIssues', => @gui.fillIssues(@useCase.getIssues()))
    After(@gui, 'showComments', => @gui.fillComments(@useCase.getComments()))
    After(@gui, 'showSurveys', => @gui.fillSurveys(@useCase.getSurveys()))
    After(@useCase, 'voteSurvey', (survey_id,option_id) => @gui.fillSurveys(@useCase.getSurveys()))
    After(@useCase, 'initGuiDummy',  => @gui.init(@useCase.getProject(),@useCase.getImages()))
    BeforeAll(@gui, ['showHome','showSurveys','showComments','showIssues'], => @gui.refreshUi())
    After(@gui, 'addCommentToDatabaseDummy', (comment) => @useCase.addComment(comment))
    After(@gui, 'addIssueToDatabaseDummy', (issue) => @useCase.addIssue(issue))
    After(@useCase, 'addIssue', (issue) => @storage.addIssue(issue,@useCase.getProject()))
    After(@useCase, 'addComment', (comment) => @storage.addComment(comment,@useCase.getProject()))
    After(@useCase, 'addComment', (comment) => @gui.fillComments(@useCase.getComments()))
    After(@useCase, 'addIssue', (issue) => @gui.fillIssues(@useCase.getIssues()))
    After(@gui, 'voteSurveyDummy', (survey_id, option_id) => @useCase.voteSurvey(survey_id, option_id))
    After(@useCase, 'updateOptionDummy', (option) => @storage.updateOption(option))
    After(@useCase, 'voteSurveyDummy', (survey) => @storage.surveyVote(survey))
    LogAll(@useCase)
    LogAll(@storage)